Before:
  Save g:vigun_mappings
After:
  Restore g:vigun_mappings

Given javascript (js spec file):
  const {expect} = require('chai')

  describe('a thing', function() {
    beforeEach(function() {
      this.timeout = 200
    })

    it('does this', function() {
      const a = 2
      expect(a).to.eq(2)
    })

    it('does not do that', function() {
      const a = 2
      expect(a).to.eq(2)
    })

    it('withstands "quotes" within quotes', function() {
      expect(true).to.eq(true)
    })

    context('when a thing is true', function() {
      it('does this', function() {
        expect(true).to.eq(true)
      })

      it('does not do that', function() {
        expect(true).to.eq(true)
      })
    })

    context('when a thing is false', function() {
      it('does this', function() {
        expect(true).to.eq(true)
      })

      it('does not do that', function() {
        expect(true).to.eq(true)
      })
    })

    it(
      'handles test title on separate line', () => {
        expect(true).to.eq(true)
      }
    )
  })

Execute (when there is no command for a file name):
  file blahStuff.js
  AssertThrows VigunRun 'all'
  AssertEqual g:vader_exception, "There is no command to run blahStuff.js. Please set one up in g:vigun_mappings"

Execute (default run all tests in a file):
  file testSpec.js
  VigunRun 'all'
  AssertEqual "./node_modules/.bin/mocha testSpec.js", GetLastMessage()

Execute (default run test under cursor):
  file testSpec.js
  normal 14j
  VigunRun 'nearest'
  AssertEqual './node_modules/.bin/mocha --fgrep \"a thing does not do that\" testSpec.js', GetLastMessage()

Execute (default debug test under cursor):
  file testSpec.js
  normal 14j
  VigunRun 'debug-nearest'
  AssertEqual './node_modules/.bin/mocha --inspect-brk --no-timeouts --fgrep \"a thing does not do that\" testSpec.js', GetLastMessage()

Execute (test name has quotes inside quotes):
  file testSpec.js
  normal 19j
  VigunRun 'nearest'
  AssertEqual './node_modules/.bin/mocha --fgrep \"a thing withstands \\\"quotes\\\" within quotes\" testSpec.js', GetLastMessage()

Execute (with a different command):
  file browser/testSpec.js
  let g:vigun_mappings = [
        \ {
        \   'pattern': 'browser/.*Spec.js$',
        \   'all': 'electron-mocha --renderer #{file}',
        \   'debug-all': 'electron-mocha --interactive #{file}',
        \   'debug-nearest': 'electron-mocha --interactive --fgrep #{nearest_test} #{file}',
        \ },
        \ {
        \   'pattern': 'Spec.js$',
        \   'all': 'mocha #{file}',
        \   'debug-all': 'mocha --inspect-brk --no-timeouts #{file}',
        \   'debug-nearest': 'mocha --inspect-brk --no-timeouts --fgrep #{nearest_test} #{file}',
        \ },
        \]

  VigunRun 'all'
  AssertEqual "electron-mocha --renderer browser/testSpec.js", GetLastMessage()

  normal 14j
  VigunRun 'debug-nearest'
  AssertEqual 'electron-mocha --interactive --fgrep \"a thing does not do that\" browser/testSpec.js', GetLastMessage()

  file testSpec.js
  VigunRun 'all'
  AssertEqual "mocha testSpec.js", GetLastMessage()

  VigunRun 'debug-nearest'
  AssertEqual 'mocha --inspect-brk --no-timeouts --fgrep \"a thing does not do that\" testSpec.js', GetLastMessage()

Execute (traverses up the tree of contexts):
  file testSpec.js
  normal 38j
  VigunRun 'nearest'
  AssertEqual './node_modules/.bin/mocha --fgrep \"a thing when a thing is false does not do that\" testSpec.js', GetLastMessage()

Execute (handles test title on separate line):
  file testSpec.js
  normal 44j
  VigunRun 'nearest'
  AssertEqual './node_modules/.bin/mocha --fgrep \"a thing handles test title on separate line\" testSpec.js', GetLastMessage()

Given javascript (.only test):
  const {expect} = require('chai')

  describe('a thing', function() {
    beforeEach(function() {
      this.timeout = 200
    })

    it.only('withstands "quotes" within quotes', function() {
      expect(true).to.eq(true)
    })
  })

Execute (.only uses all instead of nearest):
  file testSpec.js
  normal 8j
  VigunRun 'nearest'
  AssertEqual "./node_modules/.bin/mocha testSpec.js", GetLastMessage()

  VigunRun 'debug-nearest'
  AssertEqual './node_modules/.bin/mocha --inspect-brk --no-timeouts testSpec.js', GetLastMessage()
